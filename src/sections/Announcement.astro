---
import { getAnnouncements } from "../api/queries";
import Button from "../components/Button.astro";
import SectionHeading from "../components/SectionHeading.astro";
import { desktopImage } from "../lib/image-url";
import Section from "../components/Section.astro";
import { PortableText } from "astro-portabletext";
import { videoIdFromUrl } from "../lib/video-urls";

const schema = await getAnnouncements();
const query = new URLSearchParams(schema.video.split("?")[1]);
---

<Section id="announcement">
  <div class="grid gap-4">
    {
      schema.image && (
        <img src={desktopImage(schema.image)} alt="Announcement Image" />
      )
    }
    {
      schema.video && !schema.image && (
        <iframe
          style="width: 100%; aspect-ratio: 16/9"
          src={`https://www.youtube.com/embed/${videoIdFromUrl(schema.video)}`}
          title="YouTube video player"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
          allowfullscreen
        />
      )
    }
    <div>
      {schema.heading && <SectionHeading>{schema.heading}</SectionHeading>}
      <PortableText class="text-white text-lg" value={schema.richText} />
    </div>
    <div class="flex justify-end">
      <Button>
        <a class="block w-full" href={schema.link}>{schema.linkTitle} &rarr;</a>
      </Button>
    </div>
  </div>
</Section>
